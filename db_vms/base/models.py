from pydoc import describe
from django.db import models
from django.contrib.auth.models import User

class WeaknessType(models.Model):
    name = models.CharField(max_length=100)
    description = models.CharField(max_length=1000)

    def __str__(self):
        return self.name

class DiscussionRoom(models.Model):
    title = models.CharField(max_length=100)
    description = models.TextField(null=True, blank=True)
    topic = models.ForeignKey(WeaknessType, on_delete=models.SET_NULL, null=True)
    host = models.ForeignKey(User, on_delete=models.SET_NULL, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    members = models.ManyToManyField(User, related_name='members', blank=True)

    def __str__(self):
        return self.title

class Message(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    droom = models.ForeignKey(DiscussionRoom, on_delete=models.CASCADE)
    message = models.TextField()
    timestamp = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.message

class Status(models.Model):
    status = models.CharField(max_length=100)
    description = models.TextField()

    def __str__(self):
        return self.status

class CVE(models.Model):
    cve_id = models.CharField(max_length=20, primary_key=True, unique=True)
    date = models.DateField()
    description = models.TextField()
    language = models.CharField(max_length=20)
    score = models.FloatField(null=True, blank=True)
    weakness_type = models.ForeignKey(WeaknessType, on_delete=models.SET_NULL, null=True)
    solution = models.TextField(null=True, blank=True)
    attack_complexity = models.CharField(max_length=20)
    user_interaction = models.CharField(max_length=20)
    availability = models.CharField(max_length=20)
    link = models.CharField(max_length=100)
    status = models.ForeignKey(Status, on_delete=models.SET_NULL, null=True)

    def __str__(self):
        return self.cve_id
